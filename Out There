
var scene = "menu";

var chunk = 1;

var pal = [
    color(100),
    color(0, 136, 255),
    color(196, 12, 12),
    color(70),
    color(4, 98, 181),
];

var drawShape = function(shp, x, y, z){
    noStroke();
    for (var sy=0; sy<shp.length; sy++){
        var row = shp[sy];
        for (var sx=0; sx<row.length; sx++){
            var cl = row[sx];
            if (cl>" "){
                fill(pal[cl]);
                rect(x+sx*z, y+sy*z, z, z);
            }
        }
    }
};

var ship1 = [
    "10303003",
    " 0     30",
    "1030030030",
    "       0030",
    "       30200",
    "       002030",
    "       30230",
    "       0300",
    "1303003303",
    " 0     03",
    "13030030",
];

var ship2 = [
    "   3 3 3",
    "   3 3 3",
    "   3 3 3",
    "   14141",
    "  4141414",
    " 14141414100",
    "1141414141020",
    "1141414141000",
    "1141414141020",
    " 14141414100",
    "  4141414",
    "   14141",
    "   3 3 3",
    "   3 3 3",
    "   3 3 3",
];

var ship3 = [
    "      11",
    "     5555",
    "    11  11",
    "   55    55",
    "  11      11",
    "   55    55",
    "    11  11",
    "     5555",
    "      11",
];

var ship4 = [
    " 3",
    " 333",
    " 3333",
    " 03333",
    "20000000",
    " 00000110",
    " 0000000",
    "203333",
    " 3333",
    " 333",
    " 3",
];

drawShape(
    ship1, // Name
    10, // X
    10, // Y
    5 // Size of each indivudual rectangle
);

var version = 2.5;

var playTutorial = true;

var galacticTwilight = false;

var initGame = false;

var sides = 6;//change this to change shape

var i = 0;

var fade = 0;
    var message ="I am an astronaut, captain of the spaceship Paladin.\nI was orbiting Telesto, a moon of Saturn\nuntil something happened...\nWhen I awoke from cryo-sleep, I wasn't in orbit around Telesto.\nIn fact, I wasn't even in the solar system.\nI was....";

var slide = 0;

var displayBox = false;

var Xs = [];
var Ys = [];
var Ss = [];
for(var i = 0;i < 100;i ++){
    Xs.push(random(0,600));
    Ys.push(random(0,500));
    Ss.push(random(1,5));
}

var hexagon = function(xPos, yPos, size, rot, fillCol, strokeCol, strokeSize) {
    fill(fillCol);
    stroke(strokeCol);
    strokeWeight(strokeSize);
    beginShape();
    for (var r = 0 + rot; r < 360 + rot; r += 60) {
        var x = size/2 * cos(r) + xPos;
        var y = size/2 * sin(r) + yPos;
        vertex(x, y);
    }
    endShape(CLOSE);
};
var hexlogo = function(xPos, yPos, size, programming) {
    pushMatrix();
    translate(xPos, yPos);
    scale(size / 200);
    textFont(createFont('verdana-bold'), 35);
    for (var i = -1; i <= 1; i++) {
        hexagon(i * 70, 0, 80, 30, color(255, 255, 255, 60), color(255), 5);
        fill(255);
        text('HEX'[i + 1], i * 70, 0);
    }
    if (programming) {
        textFont(createFont('verdana-bold'), 19);
        text('p r o g r a m m i n g', 0, 60);
    }
    popMatrix();
};
var pirate = function(x, y){
            //Generated by DY's SVG converter
            pushMatrix();
            translate(x,y);
            scale(0.03);
            rotate(180);
            noStroke();
            fill(255);
            beginShape();
            vertex(1255, 2123);
            bezierVertex(1164, 2113, 1065, 2053, 1030, 1985);
            bezierVertex(984, 1896, 865, 1815, 692, 1754);
            bezierVertex(663, 1744, 641, 1731, 643, 1725);
            bezierVertex(648, 1710, 864, 1616, 999, 1570);
            bezierVertex(1194, 1504, 1305, 1486, 1525, 1485);
            bezierVertex(1734, 1485, 1800, 1495, 1960, 1554);
            vertex(2045, 1585);
            vertex(1963, 1591);
            bezierVertex(1904, 1595, 1866, 1605, 1826, 1624);
            bezierVertex(1764, 1655, 1686, 1734, 1654, 1801);
            bezierVertex(1642, 1825, 1620, 1870, 1605, 1901);
            bezierVertex(1534, 2049, 1394, 2137, 1255, 2123);
            endShape();
            beginShape();
            vertex(1140, 1936);
            bezierVertex(1152, 1903, 1186, 1885, 1206, 1901);
            bezierVertex(1215, 1908, 1236, 1910, 1266, 1906);
            bezierVertex(1308, 1901, 1312, 1902, 1328, 1930);
            bezierVertex(1348, 1965, 1360, 1967, 1385, 1940);
            bezierVertex(1408, 1915, 1399, 1894, 1362, 1887);
            bezierVertex(1335, 1881, 1332, 1877, 1328, 1833);
            bezierVertex(1323, 1780, 1332, 1760, 1362, 1760);
            bezierVertex(1386, 1760, 1396, 1734, 1380, 1715);
            bezierVertex(1365, 1697, 1330, 1695, 1330, 1713);
            bezierVertex(1330, 1720, 1325, 1731, 1318, 1738);
            bezierVertex(1309, 1747, 1301, 1743, 1284, 1725);
            bezierVertex(1271, 1711, 1257, 1700, 1251, 1700);
            bezierVertex(1240, 1700, 1214, 1724, 1202, 1747);
            bezierVertex(1191, 1766, 1172, 1756, 1160, 1724);
            bezierVertex(1148, 1694, 1139, 1694, 1111, 1724);
            bezierVertex(1085, 1752, 1090, 1770, 1124, 1770);
            bezierVertex(1155, 1770, 1171, 1791, 1168, 1829);
            bezierVertex(1166, 1863, 1135, 1890, 1100, 1890);
            bezierVertex(1072, 1890, 1064, 1917, 1085, 1940);
            bezierVertex(1109, 1967, 1129, 1965, 1140, 1936);
            endShape();
            beginShape();
            vertex(1280, 1840);
            bezierVertex(1267, 1832, 1268, 1830, 1283, 1830);
            bezierVertex(1292, 1830, 1300, 1835, 1300, 1840);
            bezierVertex(1300, 1852, 1299, 1852, 1280, 1840);
            endShape();
            beginShape();
            vertex(1004, 1505);
            bezierVertex(965, 1466, 980, 1410, 1037, 1381);
            bezierVertex(1081, 1359, 1140, 1401, 1140, 1455);
            bezierVertex(1140, 1494, 1138, 1496, 1074, 1515);
            bezierVertex(1030, 1528, 1027, 1528, 1004, 1505);
            endShape();
            beginShape();
            vertex(1808, 1477);
            bezierVertex(1777, 1468, 1770, 1461, 1759, 1423);
            bezierVertex(1753, 1399, 1731, 1361, 1710, 1338);
            vertex(1673, 1296);
            vertex(1637, 1324);
            bezierVertex(1617, 1340, 1600, 1357, 1600, 1362);
            bezierVertex(1600, 1367, 1609, 1388, 1619, 1409);
            vertex(1639, 1447);
            vertex(1472, 1453);
            bezierVertex(1380, 1456, 1297, 1461, 1288, 1465);
            bezierVertex(1263, 1475, 1265, 1447, 1291, 1401);
            bezierVertex(1337, 1318, 1445, 1287, 1535, 1330);
            vertex(1581, 1352);
            vertex(1616, 1319);
            bezierVertex(1635, 1301, 1650, 1283, 1650, 1279);
            bezierVertex(1650, 1259, 1470, 1180, 1423, 1180);
            bezierVertex(1407, 1180, 1385, 1165, 1357, 1134);
            bezierVertex(1334, 1108, 1301, 1081, 1283, 1074);
            bezierVertex(1210, 1043, 1119, 1071, 1073, 1139);
            bezierVertex(1059, 1160, 1028, 1183, 990, 1201);
            bezierVertex(924, 1232, 841, 1309, 820, 1359);
            bezierVertex(813, 1376, 804, 1390, 799, 1390);
            bezierVertex(784, 1390, 490, 1114, 490, 1100);
            bezierVertex(490, 1095, 542, 1074, 606, 1053);
            bezierVertex(670, 1032, 725, 1009, 727, 1003);
            bezierVertex(730, 996, 718, 950, 702, 900);
            bezierVertex(666, 794, 658, 801, 805, 825);
            bezierVertex(962, 851, 961, 851, 976, 767);
            bezierVertex(979, 747, 986, 728, 990, 725);
            bezierVertex(994, 722, 1024, 756, 1056, 799);
            bezierVertex(1089, 843, 1118, 879, 1121, 879);
            bezierVertex(1124, 880, 1162, 828, 1206, 764);
            bezierVertex(1249, 700, 1294, 636, 1305, 623);
            vertex(1326, 598);
            vertex(1355, 720);
            bezierVertex(1372, 792, 1390, 844, 1398, 848);
            bezierVertex(1409, 852, 1643, 783, 1758, 742);
            bezierVertex(1777, 735, 1773, 758, 1729, 889);
            bezierVertex(1704, 963, 1692, 1016, 1697, 1021);
            bezierVertex(1703, 1027, 1736, 1026, 1781, 1021);
            bezierVertex(1918, 1002, 2201, 978, 2207, 984);
            bezierVertex(2213, 989, 2198, 1008, 2085, 1135);
            bezierVertex(1984, 1247, 1928, 1319, 1934, 1329);
            bezierVertex(1937, 1333, 1965, 1345, 1997, 1355);
            bezierVertex(2029, 1365, 2059, 1376, 2064, 1380);
            bezierVertex(2077, 1392, 1904, 1490, 1872, 1489);
            bezierVertex(1857, 1488, 1829, 1483, 1808, 1477);
            endShape();
            beginShape();
            vertex(1645, 1110);
            bezierVertex(1648, 1104, 1645, 1098, 1638, 1095);
            bezierVertex(1631, 1093, 1547, 1061, 1453, 1025);
            bezierVertex(1358, 989, 1275, 960, 1269, 960);
            bezierVertex(1221, 960, 1465, 1082, 1558, 1105);
            bezierVertex(1630, 1122, 1637, 1122, 1645, 1110);
            endShape();
            beginShape();
            vertex(930, 1412);
            bezierVertex(929, 1364, 992, 1309, 1047, 1311);
            bezierVertex(1074, 1312, 1074, 1312, 1041, 1322);
            bezierVertex(992, 1336, 964, 1357, 946, 1393);
            bezierVertex(938, 1411, 930, 1419, 930, 1412);
            endShape();
            fill(0, 0, 0);
            beginShape();
            vertex(1085, 1940);
            bezierVertex(1064, 1917, 1072, 1890, 1100, 1890);
            bezierVertex(1135, 1890, 1166, 1863, 1168, 1829);
            bezierVertex(1171, 1791, 1155, 1770, 1124, 1770);
            bezierVertex(1090, 1770, 1085, 1752, 1111, 1724);
            bezierVertex(1139, 1694, 1148, 1694, 1160, 1724);
            bezierVertex(1172, 1756, 1191, 1766, 1202, 1747);
            bezierVertex(1214, 1724, 1240, 1700, 1251, 1700);
            bezierVertex(1257, 1700, 1271, 1711, 1284, 1725);
            bezierVertex(1301, 1743, 1309, 1747, 1318, 1738);
            bezierVertex(1325, 1731, 1330, 1720, 1330, 1713);
            bezierVertex(1330, 1695, 1365, 1697, 1380, 1715);
            bezierVertex(1396, 1734, 1386, 1760, 1362, 1760);
            bezierVertex(1332, 1760, 1323, 1780, 1328, 1833);
            bezierVertex(1332, 1877, 1335, 1881, 1362, 1887);
            bezierVertex(1399, 1894, 1408, 1915, 1385, 1940);
            bezierVertex(1360, 1967, 1348, 1965, 1328, 1930);
            bezierVertex(1312, 1902, 1308, 1901, 1266, 1906);
            bezierVertex(1236, 1910, 1215, 1908, 1206, 1901);
            bezierVertex(1186, 1885, 1152, 1903, 1140, 1936);
            bezierVertex(1129, 1965, 1109, 1967, 1085, 1940);
            endShape();
            beginShape();
            vertex(1300, 1840);
            bezierVertex(1300, 1835, 1292, 1830, 1283, 1830);
            bezierVertex(1268, 1830, 1267, 1832, 1280, 1840);
            bezierVertex(1299, 1852, 1300, 1852, 1300, 1840);
            endShape();
            beginShape();
            vertex(1558, 1105);
            bezierVertex(1465, 1082, 1221, 960, 1269, 960);
            bezierVertex(1275, 960, 1358, 989, 1453, 1025);
            bezierVertex(1547, 1061, 1631, 1093, 1638, 1095);
            bezierVertex(1654, 1101, 1644, 1120, 1627, 1119);
            bezierVertex(1620, 1119, 1589, 1112, 1558, 1105);
            endShape();  
            popMatrix();
    };

var button = function(x,y,txt,after) {
    rectMode(CENTER);
    textFont(createFont("Chalkboard Italic"));
    textAlign(CENTER,CENTER);
    strokeWeight(2);
    stroke(0);
    fill(255);
    if(mouseX > x-75 && mouseX < x+75 && mouseY < y+15 && mouseY > y-15) {
        fill(200);
    }
    if(mouseIsPressed && mouseX > x-75 && mouseX < x+75 && mouseY < y+15 && mouseY > y-15) {
        scene = after;   
    }
    (rect)(x, y, 150, 30, 0, 100, 0, 0); 
    fill(0);
    triangle(x-70,y-10,x-70,y+10,x-65,y);
    textSize(15);
    text(txt,x,y);
    
};

var drawShipSignal = function(x, y, r, size){
    pushMatrix();
    translate(x, y);
    rotate(r);
    
    fill(0);
    ellipse(0, 0, size, size);
    
    strokeWeight(size/2.5);
    noFill();
    stroke(0);
    arc(0, 0, size * 3, size * 3, -40, 40);
    arc(0, 0, size * 5, size * 5, -40, 40);
    arc(0, 0, size * 7, size * 7, -40, 40);
    arc(0, 0, size * 3, size * 3, -220, -140);
    arc(0, 0, size * 5, size * 5, -220, -140);
    arc(0, 0, size * 7, size * 7, -220, -140);
    popMatrix();
};//drawn by Caleb Smith

var messageBox = function(x,y,txt) {
    textFont(createFont("Chalkboard Italic"));
    textSize(15);
    fill(255);
    stroke(0);
    strokeWeight(2);
    (rect)(x, y, 150, 109, 0, 100, 0, 100);
    fill(0);
    text(txt,x,y);
};


var shapes = function(x, y, w, h){
    beginShape();
  for(var i = 0; i < sides; i++){
      strokeWeight(5);
        vertex(cos(i * 360 /sides)*w + x, sin(i * 360 / sides)*h + y);//DO NOT CHANGE
    }
    endShape(CLOSE);
};

var starrySky = function() {
background(35, 0, 92);
  for(var i = 0;i < Xs.length;i ++){
        noStroke();
        fill(Ys[i],Xs[i],(frameCount*Ss[i])*Ss.length/2);
        
        shapes(Xs[i]+sin(frameCount+i*0.74+Ys[i])*26,Ys[i]+sin(millis()/10+i*3.7+ 1.3469-Ss[i])*6,Ss[i],Ss[i]);
    }

}; //stars borrowed from #1 Planet Proponent and edited by me.

var title = function(x,y) {
    {
 textFont(createFont("Chalkboard Bold Italic")); 
pushMatrix();
rotate(-10);
translate(x,y);
textSize(77);
fill(255, 0, 174);
text("OUT",123,205);
fill(255);
text("OUT",119,200);
textSize(90);
fill(255, 0, 174);
text("THERE",185,289);
fill(255);
text("THERE",179,283);
textFont(createFont("Chalkduster"));

popMatrix();
}//title  
};

var menuScreen = function() {
starrySky();  
textFont(createFont("Chalkboard Bold Italic"));
title(54,-118);

fill(255,0,174);
textSize(199);
text("Ω",471,104);
button(90,347,"New Game","cinematic");
button(90,407,"Quick Start","game");

button(90,467,"Credits","credits");

fill(255);
text("Alpha " + version + "",559,19);
pirate(592,513);
hexlogo(472,475,50,true);
text("Development canceled for now.",323,272);

if(mouseX > 520 && mouseY > 450) {
    messageBox(472,394,"See my profile here:\nbit.ly/1V5eis7");    
}//message boxes for logos
if(mouseX > 440 && mouseX < 500 && mouseY > 470) {
    messageBox(373,408,"HEX Programming:\nbit.ly/1WUmL7U");    
}


};

var openingCinematic = function() {

    starrySky();    
   
    textFont(createFont("Chalkboard Italic"));
    textSize(20);
    textAlign(CENTER,CENTER);
    fill(255);
    text(message.substring(0,i-100),300,105);
    
    i+=0.3;
    if(i > 360) {
         textFont(createFont("Chalkboard Bold Italic")); 
pushMatrix();
rotate(-10);
translate(83,81);
textSize(77);
fill(255, 0, 174,fade);
text("OUT",123,205);
fill(255,255,255,fade);
text("OUT",119,200);
textSize(90);
fill(255, 0, 174,fade);
text("THERE",185,289);
fill(255,255,255,fade);
text("THERE",179,283);
fade++;
popMatrix();
        if(fade > 255) {
        button(85,470,"Begin","game");
        }
    }
};



var creditsPage = function() {
    starrySky();
    title(54,-118);
fill(255,0,174);
textSize(199);
text("Ω",471,104);
    textFont(createFont("Chalkboard Italic"));
    fill(255);
    textSize(18);
    text("Game designed by",217,241);
    text("Produced by",217,296);
    text("Graphics by",217,346);
    text("Planets by",217,396);
    text("Spaceships by",217,446);
    pirate(75,513);
    button(513,472,"Back","menu");
};



draw = function() {
    if(scene === "menu") {
        menuScreen();    
       
    }
    if(scene === "cinematic") {
        openingCinematic();    
    }
    if(scene === "game") {
        
    
        starrySky();
        
          

        drawShape(ship1,121,273+sin(frameCount*5)*5,7);
        
    }
    
    if(scene === "credits") {
        creditsPage();
        
    }
  
    
};
